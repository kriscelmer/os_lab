heat_template_version: 2018-08-31

description: >
  Lesson 49 - Single Nova instance with an attached Cinder volume and a Floating IP.
  Uses "demo" project defaults: m1.tiny, demo-cirros, demo-net, ssh-icmp, labkey, 1GB volume, provider-net.

# Optional: parameter grouping helps Horizon render friendlier forms
parameter_groups:
  - label: Compute
    parameters: [instance_name, flavor, image, key_name]
  - label: Networking
    parameters: [network, security_group, external_network]
  - label: Storage
    parameters: [volume_size]

parameters:
  # Required by the brief: take instance name as input
  instance_name:
    type: string
    label: Instance name
    description: Name of the Nova server to create.
    default: sec11-demo1
    constraints:
      - length: { min: 1, max: 32 }
        description: Name must be between 1 and 32 characters.

  flavor:
    type: string
    label: Flavor
    description: Nova flavor to use for the server.
    default: m1.tiny
    constraints:
      - custom_constraint: nova.flavor

  image:
    type: string
    label: Image
    description: Glance image to boot from (e.g., a CirrOS or cloud image).
    default: demo-cirros
    constraints:
      - custom_constraint: glance.image

  network:
    type: string
    label: Tenant network
    description: Neutron network that the instance port will attach to.
    default: demo-net
    constraints:
      - custom_constraint: neutron.network

  security_group:
    type: string
    label: Security Group
    description: Security group applied to the server port (should allow SSH+ICMP in this lab).
    default: ssh-icmp
    constraints:
      - custom_constraint: neutron.security_group

  key_name:
    type: string
    label: Key Pair
    description: Existing Nova key pair name to inject into the instance.
    default: labkey
    constraints:
      - custom_constraint: nova.keypair

  volume_size:
    type: number
    label: Volume size (GiB)
    description: Size of the Cinder volume to attach.
    default: 1
    constraints:
      - range: { min: 1, max: 20 }
        description: Volume size must be at least 1 GiB.

  external_network:
    type: string
    label: External (provider) network
    description: Neutron external network to allocate the Floating IP from.
    default: provider-net
    constraints:
      - custom_constraint: neutron.network

resources:
  # A dedicated Neutron port lets us attach SGs and a Floating IP cleanly.
  server_port:
    type: OS::Neutron::Port
    properties:
      name:
        str_replace:
          template: "%name%-port"
          params: { "%name%": { get_param: instance_name } }
      network: { get_param: network }
      security_groups:
        - { get_param: security_group }

  # Nova server using the pre-created keypair; NIC is the port above.
  server:
    type: OS::Nova::Server
    properties:
      name: { get_param: instance_name }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: server_port }

  # Data volume with predictable name derived from instance_name.
  data_volume:
    type: OS::Cinder::Volume
    deletion_policy: Retain     # keep the data if the stack is deleted (great for understanding lifecycle!)
    properties:
      size: { get_param: volume_size }
      name:
        str_replace:
          template: "%name%-vol"
          params: { "%name%": { get_param: instance_name } }

  # Attach the data_volume to the server (as /dev/vdb in many images).
  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: server }
      volume_id: { get_resource: data_volume }
      mountpoint: /dev/vdb

  # Allocate a Floating IP from the external network and bind it to the instance port.
  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: external_network }
      port_id: { get_resource: server_port }

outputs:
  instance_name:
    description: The instance name (as created on Nova).
    value: { get_attr: [server, name] }

  instance_id:
    description: The Nova server UUID.
    value: { get_resource: server }

  flavor_name:
    description: Flavor used to boot the server.
    value: { get_param: flavor }

  image_name:
    description: Image used to boot the server.
    value: { get_param: image }

  network_name:
    description: Tenant network name the server is attached to.
    value: { get_param: network }

  security_group_name:
    description: Security group applied to the server port.
    value: { get_param: security_group }

  key_pair_name:
    description: Key pair injected into the instance.
    value: { get_param: key_name }

  fixed_ip_address:
    description: The instance's fixed IP on the tenant network.
    value: { get_attr: [server_port, fixed_ips, 0, ip_address] }

  floating_ip_address:
    description: The Floating IP allocated from the provider network.
    value: { get_attr: [floating_ip, floating_ip_address] }
